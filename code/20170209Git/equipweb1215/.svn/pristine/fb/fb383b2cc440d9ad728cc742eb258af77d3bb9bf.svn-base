///////////////////////////////////////////////////////////
//  IEvent.cs
//  Implementation of the Interface IEvent
//  Generated by Enterprise Architect
//  Created on:      26-10月-2015 9:46:30
//  Original author: chenbin
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using FlowEngine.Param;
using System.Data.Entity.Core.Objects;



namespace FlowEngine.Event {
	/// <summary>
	/// 事件（Event）类对外提供的接口
	/// </summary>
	public interface IEvent              {

		/// <summary>
		/// 获取事件（Event）的名称
		/// </summary>
        string name
        {
            get;
            set;
        }

		/// <summary>
		/// 获取事件（Event）的描述
		/// </summary>
        string description
        {
            get;
            set;
        }

		/// <summary>
		/// After Action
		/// </summary>
		string afteraction{
			get;
			set;
		}

		/// <summary>
		/// Before Action
		/// </summary>
		string beforeaction{
			get;
			set;
		}

		/// <summary>
		/// 事件的主事件
		/// </summary>
		string currentaction{
			get;
			set;
		}

		/// <summary>
		/// 进入该事件（Event）
		/// </summary>
		/// <param name="strjson"></param>
		void EnterEvent(string strjson);

		/// <summary>
		/// 离开该事件（Event）
		/// </summary>
		/// <param name="strjson"></param>
		void LeaveEvent(string strjson);

        /// <summary>
        /// 跟新与之相关的变量的值
        /// </summary>
        /// <param name="strjson"></param>
        /// <returns></returns>
        bool UpdateParams(string strjson);
        /// <summary>
        /// 获取相关联的参数
        /// </summary>
        Dictionary<string, CParam> paramlist
        {
            get;
        }

        /// <summary>
        /// 获取相关联参数的App_res
        /// </summary>
        Dictionary<string, string> paramsApp_res
        {
            get;
        }

        /// <summary>
        /// 权限检查
        /// </summary>
        bool CheckAuthority<T>(Dictionary<string, object> outer_paras, ObjectContext oc);

	}//end IEvent

}//end namespace Event