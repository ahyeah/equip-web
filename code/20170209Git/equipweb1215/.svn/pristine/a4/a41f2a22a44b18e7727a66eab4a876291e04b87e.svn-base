///////////////////////////////////////////////////////////
//  CNormlEvent.cs
//  Implementation of the Class CNormlEvent
//  Generated by Enterprise Architect
//  Created on:      26-10月-2015 9:46:30
//  Original author: chenbin
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using FlowEngine.Event;
using FlowEngine;
using System.Xml;
using System.Web;
using System.Net;
using System.Diagnostics;
namespace FlowEngine.Event {
	public class CNormlEvent : CEvent {

		public CNormlEvent(CWorkFlow parent) : base(parent){

		}

		~CNormlEvent(){

		}

		/// <summary>
		/// 解析XML元素
		/// </summary>
		/// <param name="xmlNode"></param>
		public override void InstFromXmlNode(XmlNode xmlNode){
            //1. 解析基类CEvent的成员
            base.InstFromXmlNode(xmlNode);

            //2. 解析NormalEvent的成员
		}

		/// <summary>
		/// 反解析到XML元素
		/// </summary>
		public override XmlNode WriteToXmlNode(){

            //1. 反解析基类部分成员
            XmlNode xn = base.WriteToXmlNode();

            //2. 反解析NormalEvent的成员
            XmlElement xe = (XmlElement)xn;
            xe.SetAttribute("type", "normlevent");
            return xn;
		}
        
		/// <summary>
		/// 进入该事件（Event）
		/// </summary>
		/// <param name="strjson"></param>
		public override void EnterEvent(string strjson){

            try
            {
                byte[] bytes = Encoding.UTF8.GetBytes(strjson);

                HttpWebRequest request = (HttpWebRequest)WebRequest.Create(beforeaction);
                request.ContentType = @"application/json; charset=utf-8";
                request.Method = "POST";
                request.ContentLength = bytes.Length;

                Stream postStream = request.GetRequestStream();
                postStream.Write(bytes, 0, bytes.Length);
                postStream.Dispose();

                //结束动作函数返回值
                HttpWebResponse response = (HttpWebResponse)request.GetResponse();
                Stream responseStream = response.GetResponseStream();
                StreamReader sr = new StreamReader(responseStream, Encoding.UTF8);
                //对返回结果进行处理
                OpResutsfromAction(sr.ReadToEnd());

            }
            catch(Exception e)
            {
                Trace.WriteLine("EnterEvent error:" + e.Message);
                return;
            }
		}

		/// <summary>
		/// 离开该事件（Event）
		/// </summary>
		/// <param name="strjson"></param>
		public override void LeaveEvent(string strjson){

            try
            {
                byte[] bytes = Encoding.UTF8.GetBytes(strjson);

                HttpWebRequest request = (HttpWebRequest)WebRequest.Create(afteraction);
                request.ContentType = @"application/json; charset=utf-8";
                request.Method = "POST";
                request.ContentLength = bytes.Length;

                Stream postStream = request.GetRequestStream();
                postStream.Write(bytes, 0, bytes.Length);
                postStream.Dispose();

                //结束动作函数返回值
                HttpWebResponse response = (HttpWebResponse)request.GetResponse();
                Stream responseStream = response.GetResponseStream();
                StreamReader sr = new StreamReader(responseStream, Encoding.UTF8);
                //对返回结果进行处理
                OpResutsfromAction(sr.ReadToEnd());

                

            }
            catch (Exception e)
            {
                Trace.WriteLine("EnterEvent error:" + e.Message);
                //return;
            }
            //保存信息到数据库
            base.InsertMissionToDB();
		}

	}//end CNormlEvent

}//end namespace Event