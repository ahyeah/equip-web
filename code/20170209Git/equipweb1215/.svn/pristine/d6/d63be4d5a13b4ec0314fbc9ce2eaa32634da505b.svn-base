using EquipModel.Entities;
using FlowEngine;
using FlowEngine.UserInterface;
using WebApp.Models;
using WebApp.Models.User;
using System;
using System.Collections.Generic;
using System.Data.Entity.Infrastructure;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;
using EquipModel.Context;
using System.Text;
using EquipBLL.AdminManagment;
using System.IO;

namespace WebApp.Controllers
{
    public class A13dot1Controller : CommonController
    {
        //
        // GET: /A13dot1/
        public ActionResult Index()
        {
            return View(getIndexListRecords("A13dot1", (Session["User"] as EquipModel.Entities.Person_Info).Person_Name));            
        }
        // GET: /A13dot1/装置提报
        public ActionResult ZzSubmit(string wfe_id)
        {
            return View(getSubmitModel(wfe_id));
        }

        // GET: /A13dot1/片区分类
        public ActionResult PqCatalog(string  wfe_id)
        {         
            return View(getWFDetail_Model(wfe_id));
        }
               
        // GET: /A13dot1/专业团队审核
        public ActionResult ZytdConfirm(string wfe_id)
        {
            return View(getWFDetail_Model(wfe_id));
        }
        
        public ActionResult WorkFolw_Detail(string wfe_id)
        {
            return View(getWFDetail_Model(wfe_id));
        }

        // GET: /A13dot1/跳转到其它模块--仅用于测试
        public ActionResult JumpToAx(string wfe_id)
        {       
            UI_MISSION miModel = CWFEngine.GetActiveMission<Person_Info>(int.Parse(wfe_id), ((IObjectContextAdapter)(new EquipWebContext())).ObjectContext);
            ViewBag.MODULE_NAME = miModel.Miss_Params["temp_ModuleName"].ToString();//根据片区分类结果，得到跳转的模块名，并传参数
            return View(getWFDetail_Model(wfe_id));
        }

        public string submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["submit_user"] = item["submit_user"].ToString();
                signal["submit_done"] = "true"; 
                signal["Cj_Name"] = item["Cj_Name"].ToString();
                signal["Zz_Name"] = item["Zz_Name"].ToString();              
                signal["Equip_GyCode"] = item["Equip_GyCode"].ToString();
                signal["Equip_Code"] = item["Equip_Code"].ToString();
                signal["Equip_Type"] = item["Equip_Type"].ToString();
                signal["Problem_Desc"] = item["Problem_Desc"].ToString();               
                //string  filename = Path.Combine(Request.MapPath("~/Upload"),item["Problem_DescFilePath"].ToString());
                signal["Problem_DescFilePath"] = item["Problem_DescFilePath"].ToString();
                signal["Zy_Type"] = item["Zy_Type"].ToString();
                signal["Zy_SubType"] = item["Zy_SubType"].ToString();
                signal["submit_time"] = DateTime.Now.ToString();
                //record
                Dictionary<string, string> record =  new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal,record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A13dot1/Index");
        }
        
        public string submitCatalog_signal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                Dictionary<string, string> signal = new Dictionary<string, string>();
                var flowname = item["Flow_Name"].ToString();
                signal["catlog_type"] = item["catlog_type"].ToString();

                if (item["catlog_type"].ToString() == "完好类" )
                {
                    signal["defect_level"] = item["defect_level"].ToString();
                  string temp_ModuleName = "A5dot1";
                   signal["temp_ModuleName"] = temp_ModuleName.ToString();
                    
                }
                else if (item["catlog_type"].ToString() == "隐患")
                {
                    signal["defect_level"] = item["defect_level"].ToString();
                    string temp_ModuleName = "A11dot2";
                   signal["temp_ModuleName"] = temp_ModuleName.ToString();
                }
                else if (item["catlog_type"].ToString() == "故障")
                {
                    signal["defect_level"] = item["defect_level"].ToString();
                    signal["fault_intensity"] = item["fault_intensity"].ToString();
                    string temp_ModuleName = "A13dot2";
                    signal["temp_ModuleName"] = temp_ModuleName.ToString();
                }
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal,record);
            }
            catch (Exception e)
            { return ""; }
            return ("/A13dot1/Index");
        }

        public string submitZytdConfirm_signal(string json1)
        {
            JObject item = (JObject)JsonConvert.DeserializeObject(json1);
            string flowname = item["Flow_Name"].ToString();   
            Dictionary<string, string> signal = new Dictionary<string, string>();
            //new input paras
            signal["fault_intensity"] = item["fault_intensity"].ToString();    
            signal["Confirmed"] = "true";
            Dictionary<string, string> record = new Dictionary<string, string>();
            record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
            record["time"] = DateTime.Now.ToString();
            CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal,record);
            return ("/A13dot1/Index");
        }

        //test
        public string submitOtherModule_signal(string json1)
        {
            JObject item = (JObject)JsonConvert.DeserializeObject(json1);
            string flowname = item["Flow_Name"].ToString();
            Dictionary<string, string> signal = new Dictionary<string, string>();
            //new input paras
            string mname=item["module_name"].ToString();
            //signal["temp_ModuleName"] = "\"" + mname + "\"";
          
            if(mname.Contains("A5dot1"))
                signal["temp_A5dot1"] = "true";
            else if (mname.Contains("A11dot2"))
                signal["temp_A11dot2"] = "true";
            else if (mname.Contains("A13dot2"))
            {
                signal["temp_A13dot2"] = "true";
                //signal["module_name"] = "A8dot2";
            }
            else if (mname.Contains("A8dot2"))
                signal["temp_A18dot2"] = "true";
            Dictionary<string, string> record = new Dictionary<string, string>();
            record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
            record["time"] = DateTime.Now.ToString();
            CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal,record);
            return ("/A13dot1/Index");
        }
    }
}