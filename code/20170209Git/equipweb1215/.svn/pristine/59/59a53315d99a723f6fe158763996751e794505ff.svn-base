using FlowDesigner.ConfigItems;
using FlowDesigner.customcontrol;
using FlowDesigner.Management;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Control;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace FlowDesigner
{
    /// <summary>
    /// MainWindow.xaml 的交互逻辑
    /// </summary>
    public partial class MainWindow : Window
    {
        private WorkFlowsProj main_proj;

        private int id_for_workflow = 0;
        public MainWindow()
        {
            InitializeComponent();

            string str = DateTime.Now.ToString("yyyyMM");
        }

        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            
        }
        
        public void OnConfigItem_Selected(ConfigItem sender)
        {
            main_proj.CurrentWF.SelectedItem = sender;
            property.SelectedObject = sender;
        }

        private void RadioButton_Checked(object sender, RoutedEventArgs e)
        {
            
        }

        private void mainCanvas_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)
        {

        }

        /// <summary>
        /// 新建工作流工程
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void new_proj_Click(object sender, RoutedEventArgs e)
        {
            NewWorkFlowProj newWF = new NewWorkFlowProj();
            if (!newWF.ShowDialog().Value)
                return;

            string proj_name = newWF.newProj_name;
            string proj_path = newWF.newProj_path;
            if (main_proj == null)
            {
                main_proj = new WorkFlowsProj();
                main_proj.Name = proj_name;
                main_proj.Path = proj_path;
                main_proj.win_main = this;
                TreeViewItem projItem = new TreeViewItem();
                StackPanel stack = new StackPanel();
                stack.Orientation = Orientation.Horizontal;
                Image im = new Image();
                im.Width = 16;
                im.Height = 16;
                im.Source = new BitmapImage(new Uri("new_wfs.ico", UriKind.RelativeOrAbsolute));
                stack.Children.Add(im);
                TextBlock tb = new TextBlock();
                tb.VerticalAlignment = VerticalAlignment.Center;
                tb.Text = main_proj.Name;
                stack.Children.Add(tb);
                projItem.Header = stack;
                
                main_treeView.Items.Add(projItem);
                AddFlow.IsEnabled = true;
            }
        }

        private void AddFlow_Click(object sender, RoutedEventArgs e)
        {
            if (main_proj != null)
            {
                NewFolwWin fw = new NewFolwWin();
                if (fw.ShowDialog().Value != true)
                {
                    return;
                }
                WorkFlowMan new_wf = main_proj.NewWrokFlowMan(fw.flowName, fw.flowDesc);
                if (new_wf == null)
                {
                    MessageBox.Show(fw.flow_name + "已存在");
                    return;
                }
                TreeViewItem projItem = new TreeViewItem();
                StackPanel stack = new StackPanel();
                stack.Orientation = Orientation.Horizontal;
                Image im = new Image();
                im.Width = 16;
                im.Height = 16;
                im.Source = new BitmapImage(new Uri("workflow.ico", UriKind.RelativeOrAbsolute));
                stack.Children.Add(im);
                TextBlock tb = new TextBlock();
                tb.VerticalAlignment = VerticalAlignment.Center;
                tb.Text = new_wf.Name;
                stack.Children.Add(tb);
                projItem.Header = stack;

                
                ((TreeViewItem)main_treeView.Items[0]).Items.Add(projItem);
                projItem.MouseDoubleClick += new_wf.OnSelected;
                new_wf.LinkToMainTab(mainTab);
                id_for_workflow += 1;
                main_proj.CurrentWF = new_wf;
            }
        }

        private void AddNEvent_Click(object sender, RoutedEventArgs e)
        {
            main_proj.CurrentWF.PerAddNEvent = true;
            //this.Cou
        }

        public void EndAddNEvent()
        {
            AddNEvent.IsChecked = false;
        }

        private void main_treeView_SelectedItemChanged(object sender, RoutedPropertyChangedEventArgs<object> e)
        {
            
        }

        private void mainTab_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            
        }
    }
}
