using EquipModel.Entities;
using FlowEngine;
using FlowEngine.UserInterface;
using WebApp.Models;
using WebApp.Models.User;
using System;
using System.Collections.Generic;
using System.Data.Entity.Infrastructure;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;
using EquipModel.Context;
using System.Text;
using EquipBLL.AdminManagment;
using System.IO;

namespace WebApp.Controllers
{
    public class A13dot2Controller : Controller
    {
        //A13dot2_ModelInfo
        public class A13dot2_ModelInfo
        {
            public string zzName;
            public string sbCode;
            public string sbGyCode;
            public string sbType;
            public string faultIntensity;
            public string alarmState;
            public string runTrend;
            public string latestDate;
            public string avgInterval;
            public string sbStateBak;
            public string jxKeyContent;
            public string submitTime;//装置提报时间
            public string jxPlanDate;
        }
        //A13dot2_Model
        public class A13dot2_Model
        {
            public List<A13dot2_ModelInfo> A13dot2_ModelInfoList;
        }

        //
        // GET: /A13dot2/
        public ActionResult Index()
        {
            return View(getA13dot2_Model());            
        }

        public A13dot2_Model getA13dot2_Model()
        {
            A13dot2_Model A13dot2model = new A13dot2_Model();
            A13dot2model.A13dot2_ModelInfoList = new List<A13dot2_ModelInfo>();
            A13dot2_ModelInfo h=new A13dot2_ModelInfo();
            h.zzName="排水车间装置";
            h.sbCode = "210027081";
            EquipManagment em = new EquipManagment();
            Equip_Info eqinfo = em.getEquip_Info(h.sbCode);
            h.sbGyCode=eqinfo.Equip_GyCode;
            h.sbType=eqinfo.Equip_Type;
            h.faultIntensity="4";
            h.alarmState="2级报警";
            h.runTrend="差";
            h.latestDate="2015-01-11";
            h.avgInterval="12";
            h.sbStateBak="PM-urgent";
            h.jxKeyContent="jxkeycontent";
            h.submitTime="2016-02-11";//装置提报时间
            h.jxPlanDate = "2016-02-20";
            A13dot2model.A13dot2_ModelInfoList.Add(h);

            h = new A13dot2_ModelInfo();
            h.zzName = "排水车间装置";
            h.sbCode = "210027088";
            eqinfo = em.getEquip_Info(h.sbCode);
            h.sbGyCode = eqinfo.Equip_GyCode;
            h.sbType = eqinfo.Equip_Type;
            h.faultIntensity = "5";
            h.alarmState = "1级报警";
            h.runTrend = "差";
            h.latestDate = "2015-08-08";
            h.avgInterval = "8";
            h.sbStateBak = "PM2";
            h.jxKeyContent = "jxkeycontent";
            h.submitTime = "2016-02-15";//装置提报时间
            h.jxPlanDate = "2016-02-25";
            A13dot2model.A13dot2_ModelInfoList.Add(h);

            return A13dot2model;
        }
        
        public string click_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string strAll = item["strAll"].ToString();
                string[] strArry=strAll.Split(new char[] { '$' });
                string flowname = "A8dot2"; 
                UI_WorkFlow_Entity wfe = CWFEngine.CreateAWFEntityByName(flowname);
                if (wfe != null)
                {
                    //EquipManagment em = new EquipManagment();
                    //Equip_Info eqinfo = em.getEquip_Info(strArry[11]);
                    //Dictionary<string, string> record = wfe.GetRecordItems();
                    //record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                    //record["time"] = DateTime.Now.ToString();
                    //wfe.Start(record);
                    //int flow_id =wfe.EntityID;
                    ////paras
                    //Dictionary<string, string> signal = new Dictionary<string, string>();
                    //signal["JxSubmit_done"] = "true";
                    //signal["Cj_Name"] = "Cj_Name";
                    //signal["Zz_Name"] = "Zz_Name";
                    //signal["Equip_GyCode"] = eqinfo.Equip_GyCode;
                    //signal["Equip_Code"] = eqinfo.Equip_Code;
                    //signal["Equip_Type"] = eqinfo.Equip_Type;
                    //signal["Data_Src"] = "A13.2";
                    //signal["Zy_Type"] = eqinfo.Equip_Specialty;
                    //signal["Zy_SubType"] = eqinfo.Equip_PhaseB;
                    //signal["Equip_ABCMark"] =eqinfo.Equip_ABCmark;
                    //signal["Last_JxTime"] = strArry[5]; //for test
                    //signal["Avg_NoFaultPeriod"] = strArry[4];//for test
                    //signal["Plan_JxTime"] = strArry[0];//for test
                    //signal["Plan_JxReason"] = strArry[3];//for test 
                    //signal["faulty_intensity"] = strArry[8];//for test  
                    EquipManagment em = new EquipManagment();
                    Equip_Info eqinfo = em.getEquip_Info(strArry[6]);
                    Dictionary<string, string> record = wfe.GetRecordItems();
                    record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                    record["time"] = DateTime.Now.ToString();
                    wfe.Start(record);
                    int flow_id = wfe.EntityID;
                    //paras
                    Dictionary<string, string> signal = new Dictionary<string, string>();
                    signal["JxSubmit_done"] = "true";
                    signal["Cj_Name"] = "Cj_Name";
                    signal["Zz_Name"] = "Zz_Name";
                    signal["Equip_GyCode"] = eqinfo.Equip_GyCode;
                    signal["Equip_Code"] = eqinfo.Equip_Code;
                    signal["Equip_Type"] = eqinfo.Equip_Type;
                    signal["Data_Src"] = "A13.2";
                    signal["Zy_Type"] = eqinfo.Equip_Specialty;
                    signal["Zy_SubType"] = eqinfo.Equip_PhaseB;
                    signal["Equip_ABCMark"] = eqinfo.Equip_ABCmark;
                    signal["Last_JxTime"] = strArry[3]; //for test
                    signal["Avg_NoFaultPeriod"] = strArry[2];//for test
                    signal["Plan_JxTime"] = strArry[0];//for test
                    signal["Plan_JxReason"] = strArry[1];//for test 
                    signal["faulty_intensity"] = strArry[4];//for test  
                    //record                    
                    record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                    record["time"] = DateTime.Now.ToString();
                    //submit
                    CWFEngine.SubmitSignal(flow_id, signal, record);

                }
                else
                    return "";
        
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A13dot2/Index");
        }

    }
}