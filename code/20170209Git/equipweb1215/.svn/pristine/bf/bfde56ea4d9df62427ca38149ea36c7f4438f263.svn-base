using FlowEngine.Flow;
using FlowEngine.Param;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace EXPRESS_TEST
{
    class Program
    {
        private static List<string> ParseParameters(string sql)
        {
            List<string> result = new List<string>();
            //Regex paramReg = new Regex(@"@\w*");
            //2009-2-29 修正正则表达式匹配参数时，Sql中包括@@rowcount之类的变量的情况，不应该算作参数
            Regex paramReg = new Regex(@"[^@@](?<p>@\w+)");
            MatchCollection matches = paramReg.Matches(String.Concat(sql, " "));
            foreach (Match m in matches)
                result.Add(m.Groups["p"].Value);
            return result;
        }

        static void Main(string[] args)
        {
            /*FlowEngine.Param.CParamTable pt = new FlowEngine.Param.CParamTable();

            CParam pa = new CParam();
            pa.name = "a";
            pa.value = 1;

            CParam pb = new CParam();
            pb.name = "b";
            pb.value = 2;

            pt.AppendParam(pa);
            pt.AppendParam(pb);

            CExpressionEvaluator express = new CExpressionEvaluator(pt);
            express.Parse("a + b >= 4");
            express.InfixToPostfix();
            CSymbol sb = express.Evaluate();*/
        
        string sql = "select * from student where id=@ID";
        List<string> res = ParseParameters(sql);
        }
    }
}
