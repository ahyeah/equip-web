using EquipModel.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EquipDAL.Implement
{
    public class Equip_Archis:BaseDAO
    {

        public bool AddEquip_Archi(int parent_Id, Equip_Archi New_Equip_Archi)
        {
            using (var db = base.NewDB())
            {
                try
                {
                    Equip_Archi parent = db.EArchis.Where(a => a.EA_Id == parent_Id).First();
                    if (parent == null)
                        return false;

                    parent.EA_Childs.Add(New_Equip_Archi);
                    db.SaveChanges();
                    return true;
                }
                catch
                {
                    return false;
                }
            }
        }

        public bool AddEA_Euip(int EA_Id,Equip_Info New_Equip_Info)
        {
            using (var db = base.NewDB())
            {
                try
                {
                    Equip_Archi EA = db.EArchis.Where(a => a.EA_Id == EA_Id).First();
                    if (EA == null)
                        return false;
                    EA.Equips_Belong.Add(New_Equip_Info);
                    db.SaveChanges();
                    return true;
                }
                catch {return  false; }
            }

        }

    
        public Equip_Archi getEA_Archi(int EA_Id)
        {
            using (var db = base.NewDB())
            {
                try
                {
                    Equip_Archi EA = db.EArchis.Where(a => a.EA_Id == EA_Id).First();
                    return EA;
                }
                catch { return null; }
            }
        }

        public List<Equip_Archi> getEA_Childs(int EA_Id)
        {
            using (var db = base.NewDB())
            {
                try
                {
                    Equip_Archi EA = db.EArchis.Where(a => a.EA_Id == EA_Id).First();

                    return EA.EA_Childs.ToList(); ;
                }
                catch { return null; }
            }
        }

        public List<Equip_Archi> getEA_Childs(string EA_Name)
        {
            using (var db = base.NewDB())
            {
                try
                {
                    Equip_Archi EA = db.EArchis.Where(a => a.EA_Name == EA_Name).First();

                    return EA.EA_Childs.ToList(); 
                }
                catch { return null; }
            }
        }

        public List<Equip_Archi> getEAs_isCj()
        {
            using(var db=base.NewDB())
            {
                try {  Equip_Archi EA = db.EArchis.Where(a => a.EA_Title == "车间").First();

                    return EA.EA_Childs.ToList();  }
                catch{return null;}
            }
        }

        public Equip_Archi getEA_Parent(int EA_Id)
        {
            using (var db = base.NewDB())
            {
                try
                {
                    Equip_Archi EA = db.EArchis.Where(a => a.EA_Id == EA_Id).First();

                    return EA.EA_Parent;
                }
                catch { return null; }
            }
        }

        public List<Equip_Info> getEA_Equips(int EA_Id)
        {
            using (var db = base.NewDB())
            {
                try
                {
                    Equip_Archi EA = db.EArchis.Where(a => a.EA_Id == EA_Id).First();

                    return EA.Equips_Belong.ToList();
                }
                catch { return null; }
            }
        }
        public bool ModifyEquip_Archi(int EA_Id, Equip_Archi New_Equip_Archi)
        {
            using (var db = base.NewDB())
            {
                try
                {
                     Equip_Archi EA = db.EArchis.Where(a => a.EA_Id == EA_Id).First();
                    if (EA == null)
                        return false;
                    EA.EA_Name=New_Equip_Archi.EA_Name;
                    EA.EA_Title=New_Equip_Archi.EA_Title;
                    db.SaveChanges();
                    return true;
                }
                catch { return false; }
            }

        }

        public bool DeleteEquip_Archi(int EA_Id)
        {

            using (var db = base.NewDB())
            {
                try
                {
                    Equip_Archi EA = db.EArchis.Where(a => a.EA_Id == EA_Id).First();
                    if (EA == null)
                        return false;
                    EA.Equips_Belong.Clear();
                    db.EArchis.Remove(EA);
                    db.SaveChanges();
                    return true;
                }
                catch { return false; }
            }
        }

    }
}
