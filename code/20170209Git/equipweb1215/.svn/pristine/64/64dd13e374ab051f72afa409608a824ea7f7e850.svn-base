using FlowDesigner.Management;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Control;
using System.Windows.Controls;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Shapes;
using System.Xml;

namespace FlowDesigner.customcontrol
{
    class DesignerPage : CloseableTab
    {
        public WorkFlowMan parent_man { get; set; }

        private Canvas main_Canvas = null;
        private ListView params_List = null;

        public Canvas Client
        {
            get
            {
                return main_Canvas;
            }
        }

        public ListView ParamsList
        {
            get
            {
                return params_List;
            }
        }

        public DesignerPage()
        {
            string grid_xaml = "<Grid xmlns = 'http://schemas.microsoft.com/winfx/2006/xaml/presentation'>" +
                                "   <Grid.ColumnDefinitions>" +
                                "       <ColumnDefinition Width=\"164*\"/>" +
                                "        <ColumnDefinition Width=\"405*\"/>" +
                                "   </Grid.ColumnDefinitions>" +
                                "</Grid>";
            StringReader sr_grid = new StringReader(grid_xaml);
            XmlTextReader xr_grid = new XmlTextReader(sr_grid);
            Grid grid = (Grid)(XamlReader.Load(xr_grid));

            string params_xaml = "<ListView xmlns = 'http://schemas.microsoft.com/winfx/2006/xaml/presentation' " + 
                                 "xmlns:x='http://schemas.microsoft.com/winfx/2006/xaml' " +
                                 "xmlns:i='clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity' " + 
                                 "xmlns:System='clr-namespace:System;assembly=mscorlib' " +
                                 "Grid.Column=\"0\" HorizontalAlignment=\"Stretch\" VerticalAlignment=\"Stretch\">" +
                                 "  <ListView.Resources>" +
                                 "      <DataTemplate x:Key=\"CeilItem\">" +
                                 "          <ComboBox Width=\"70\" SelectedItem=\"{Binding Type, Mode=TwoWay}\">" +                                 
                                 "              <System:String>string</System:String>" +
                                 "              <System:String>int</System:String>" +
                                 "              <System:String>float</System:String>" +
                                 "              <System:String>bool</System:String>" +
                                 "          </ComboBox>" +
                                 "      </DataTemplate>" +
                                 "  </ListView.Resources>" +
                                 "  <ListView.View>" +
                                 "      <GridView>" +
                                 "          <GridViewColumn Header=\"名称\" DisplayMemberBinding=\"{Binding Path = Name}\"/>" +
                                 "          <GridViewColumn Header=\"类型\" DisplayMemberBinding=\"{Binding Path = Type}\"/>" +
                                 "          <GridViewColumn Header=\"描述\" DisplayMemberBinding=\"{Binding Path = Desc}\"/>" +
                                 "      </GridView>" +
                                 "  </ListView.View>" +
                                 "</ListView>";
            StringReader sr_params = new StringReader(params_xaml);
            XmlTextReader xr_params = new XmlTextReader(sr_params);
            params_List = XamlReader.Load(xr_params) as ListView;
            params_List.MouseDoubleClick += this.ParamDoubleClick;

            grid.Children.Add(params_List as UIElement);
            grid.Children.Add(XamlReader.Load(new XmlTextReader(new StringReader("<GridSplitter xmlns = 'http://schemas.microsoft.com/winfx/2006/xaml/presentation' Width=\"5\"/>"))) as UIElement);

            StringReader canvas = new StringReader("<Canvas xmlns = 'http://schemas.microsoft.com/winfx/2006/xaml/presentation' Grid.Column=\"1\" VerticalAlignment=\"Stretch\" HorizontalAlignment=\"Stretch\"/>");
            main_Canvas = XamlReader.Load(new XmlTextReader(canvas)) as Canvas;

            grid.Children.Add(main_Canvas);
            this.AddChild(grid);
            


            main_Canvas.Background = new SolidColorBrush(Color.FromRgb(255, 255, 255));
        }

        public void LinkClick(MouseButtonEventHandler e)
        {
            main_Canvas.MouseLeftButtonUp += e;
        }

        public void LinkMouseMove(MouseEventHandler e)
        {
            main_Canvas.MouseMove += e;
        }
        protected override void OnSelected(RoutedEventArgs e)
        {
            base.OnSelected(e);
            parent_man.Proj.CurrentWF = parent_man;
            parent_man.Proj.win_main.OnConfigItem_Selected(parent_man.SelectedItem);
        }

        protected void ParamDoubleClick(object sender, MouseButtonEventArgs e)
        {
            
            ((MainWindow)Application.Current.MainWindow).Confi_Param((param)params_List.SelectedItem);
        }
    }
}
