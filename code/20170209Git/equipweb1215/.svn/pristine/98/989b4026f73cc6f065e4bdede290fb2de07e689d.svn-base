using EquipModel.Entities;
using FlowEngine;
using FlowEngine.UserInterface;
using WebApp.Models;
using WebApp.Models.User;
using System;
using System.Collections.Generic;
using System.Data.Entity.Infrastructure;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;
using EquipModel.Context;
using System.Text;
using EquipBLL.AdminManagment;
using System.IO;

namespace WebApp.Controllers
{
    public class A13dot1Controller : CommonController
    {
        //
        // GET: /A13dot1/
        public ActionResult Index()
        {
            return View(getIndexListRecords("A13dot1", (Session["User"] as EquipModel.Entities.Person_Info).Person_Name));            
        }
        // GET: /A13dot1/装置提报
        public ActionResult ZzSubmit(string wfe_id)
        {
            return View(getSubmitModel(wfe_id));
        }

        // GET: /A13dot1/片区分类
        public ActionResult PqCatalog(string  wfe_id)
        {         
            return View(getWFDetail_Model(wfe_id));
        }
               
        // GET: /A13dot1/专业团队审核
        public ActionResult ZytdConfirm(string wfe_id)
        {
            return View(getWFDetail_Model(wfe_id));
        }
        
        public ActionResult WorkFolw_Detail(string wfe_id)
        {
            return View(getWFDetail_Model(wfe_id));
        }

        public string ZzSubmit_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["ZzSubmit_done"] = "true"; 
                signal["Cj_Name"] = item["Cj_Name"].ToString();
                signal["Zz_Name"] = item["Zz_Name"].ToString();              
                signal["Equip_GyCode"] = item["Equip_GyCode"].ToString();
                signal["Equip_Code"] = item["Equip_Code"].ToString();
                signal["Equip_Type"] = item["Equip_Type"].ToString();
                signal["Problem_Desc"] = item["Problem_Desc"].ToString();               
                //string  filename = Path.Combine(Request.MapPath("~/Upload"),item["Problem_DescFilePath"].ToString());
                signal["Problem_DescFilePath"] = item["Problem_DescFilePath"].ToString();
                signal["Zy_Type"] = item["Zy_Type"].ToString();
                signal["Zy_SubType"] = item["Zy_SubType"].ToString();
                EquipManagment em = new EquipManagment();
                signal["Equip_ABCMark"] = em.getEquip_Info(item["Equip_Code"].ToString()).Equip_ABCmark;
                //signal["Equip_ABCMark"] = "A";//for test
                signal["Flow_Serial"] = CWFEngine.GetWorkFlowEntiy(Convert.ToInt32(flowname)).serial;
                signal["Data_Src"] = signal["Flow_Serial"]+"人工提报"; //格式统一
                //record
                Dictionary<string, string> record =  new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal,record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A13dot1/Index");
        }

        public string PqCatalog_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                Dictionary<string, string> signal = new Dictionary<string, string>();
                var flowname = item["Flow_Name"].ToString();
                signal["catlog_type"] = item["catlog_type"].ToString();

                if (item["catlog_type"].ToString() == "完好类" )
                {
                    signal["defect_level"] = item["defect_level"].ToString();
                    
                }
                else if (item["catlog_type"].ToString() == "隐患")
                {
                    signal["defect_level"] = item["defect_level"].ToString();
                }
                else if (item["catlog_type"].ToString() == "故障")
                {
                    signal["defect_level"] = item["defect_level"].ToString();
                    signal["fault_intensity"] = item["fault_intensity"].ToString();
                }
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal,record);
            }
            catch (Exception e)
            { return ""; }
            return ("/A13dot1/Index");
        }

        public string ZytdConfirm_submitsignal(string json1)
        {
            JObject item = (JObject)JsonConvert.DeserializeObject(json1);
            string flowname = item["Flow_Name"].ToString();   
            Dictionary<string, string> signal = new Dictionary<string, string>();
            //new input paras
            signal["fault_intensity"] = item["fault_intensity"].ToString();
            signal["ZytdConfirm_Result"] = "true";
            Dictionary<string, string> record = new Dictionary<string, string>();
            record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
            record["time"] = DateTime.Now.ToString();
            CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal,record);
            return ("/A13dot1/Index");
        }

    }
}