using EquipModel.Entities;
using FlowEngine;
using FlowEngine.UserInterface;
using WebApp.Models;
using WebApp.Models.User;
using System;
using System.Collections.Generic;
using System.Data.Entity.Infrastructure;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;
using EquipModel.Context;
using System.Text;
using EquipBLL.AdminManagment;
using System.IO;

using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;



namespace WebApp.Controllers
{
    public class  A7dot1dot1Controller : CommonController
    {
        //
        public class TableModel
        {
            public string name;
            public string standard_value;
            public string exact_value;
        }

        // GET: /A7dot1/
        public ActionResult Index()
        {
            
            
            return View(getIndexListRecords("A7dot1dot1", (Session["User"] as EquipModel.Entities.Person_Info).Person_Name));
        }

        // GET: /A7dot1dot1/装置提报
        public ActionResult ZzSubmit(string wfe_id)
        {
            return View(getSubmitModel(wfe_id));//
        }

        // GET: /A7dot1dot1/检修单位确认
        public ActionResult JxdwConfirm(string wfe_id)
        {
            int cur_PersionID = (Session["User"] as EquipModel.Entities.Person_Info).Person_Id;
            PersonManagment pm = new PersonManagment();
            EquipBLL.AdminManagment.PersonManagment.P_viewModal pv = pm.Get_PersonModal(cur_PersionID);
            ViewBag.user_specis = pv.Speciaty_Names;

            //由于DongZyConfirm_done 等变量未与该Event关联，所以无法获取， 故而我在下面模拟了这几个变量
            //同样的问题也会出现在JxdwConfirm_submitsignal函数中
            WFDetail_Model dfm = getWFDetail_Model(wfe_id);
            dfm.ALLHistoryMiss.Last().Miss_Params["DongZyConfirm_done"] = true.ToString();
            dfm.ALLHistoryMiss.Last().Miss_Params["DongZyMan"] = "fhp";
            dfm.ALLHistoryMiss.Last().Miss_Params["DianZyConfirm_done"] = false.ToString();
            dfm.ALLHistoryMiss.Last().Miss_Params["DianZyMan"] = "";
            dfm.ALLHistoryMiss.Last().Miss_Params["YiZyConfirm_done"] = false.ToString();
            dfm.ALLHistoryMiss.Last().Miss_Params["YiZyMan"] = "";
            //return View(getWFDetail_Model(wfe_id));
            return View(dfm);
        }

        // GET: /A7dot1dot1/机动处确认
        public ActionResult JdcConfirm(string wfe_id)
        {
            return View(getWFDetail_Model(wfe_id));
        }

        public ActionResult WorkFolw_Detail(string wfe_id)
        {
            return View(getWFDetail_Model(wfe_id));
        }



        public string ZzSubmit_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["ZzSubmit_done"] = "true"; 
                signal["Cj_Name"] = item["Cj_Name"].ToString();
                signal["Zz_Name"] = item["Zz_Name"].ToString();              
                signal["Equip_GyCode"] = item["Equip_GyCode"].ToString();
                signal["Equip_Code"] = item["Equip_Code"].ToString();
                signal["Equip_Type"] = item["Equip_Type"].ToString();  
                EquipManagment em = new EquipManagment();
                Equip_Info eqinfo=em.getEquip_Info(item["Equip_Code"].ToString());
                signal["Equip_ABCMark"] = eqinfo.Equip_ABCmark;
                signal["Zy_Type"] = eqinfo.Equip_Type;
                signal["Zy_SubType"] = eqinfo.Equip_PhaseB;            
                signal["Data_Src"] = "特护记录";
                signal["Th_CheckTime"] = DateTime.Now.ToString();
                signal["Th_CheckMen"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;

                //string Thjl_data = item["Thjl_data"].ToString();
                //string Problem_data = item["Problem_data"].ToString();
                //string workdetail = item["workdetail"].ToString();

                signal["Th_ItemRecord"] = item["Thjl_data"].ToString();
                signal["Th_WorkDetail"] = item["workdetail"].ToString();
                signal["Th_ProblemRecords"] = item["Problem_data"].ToString();
                //record
                Dictionary<string, string> record =  new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                //由于DongZyConfirm_done 等变量未与该Event关联， 所以submitSignal不会将确认信息提交到工作流
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal,record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A7dot1dot1/Index");
        }

        public string JxdwConfirm_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["DongZyConfirm_done"] = item["DongZyConfirm_done"].ToString();
                signal["DianZyConfirm_done"] = item["DianZyConfirm_done"].ToString();
                signal["YiZyConfirm_done"] = item["YiZyConfirm_done"].ToString();
                signal["DongZyMan"] = item["DongZyMan"].ToString();
                signal["DianZyMan"] = item["DianZyMan"].ToString();
                signal["YiZyMan"] = item["YiZyMan"].ToString();

                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A7dot1dot1/Index");
        }

        public string JdcConfirm_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["JdcConfirm_done"] = item["JdcConfirm_done"].ToString();               
                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A7dot1dot1/Index");
        }

        public JsonResult Read_THRecord(int WFE_ID)
        {
            List<TableModel> tb_list = new List<TableModel>();
            //UI_MISSION miss = CWFEngine.GetActiveMission<Person_Info>(WFE_ID, ((IObjectContextAdapter)(new EquipWebContext())).ObjectContext);
            //由于Th_ItemRecord等变量未于当前event关联， 导致我无法从当前任务中读取这些变量
            //所以我读取了上一条历史Mission， 这种方法效率较低， 应该将这些变量与之关联，并使用上面被注释的语句，更为妥当
            UI_MISSION miss = CWFEngine.GetHistoryMissions(WFE_ID).Last();
            string th_record = Convert.ToString(miss.Miss_Params["Th_ItemRecord"]);
            string th_problem = Convert.ToString(miss.Miss_Params["Th_ProblemRecords"]);
            string th_detail = Convert.ToString(miss.Miss_Params["Th_WorkDetail"]);
            
            return Json(new { th_record = th_record, th_problem = th_problem, th_detail = th_detail });
        }

        public JsonResult Thjl_excel(int thjl_id)
        {
            List<TableModel> tb_list = new List<TableModel>();

            DataSet ds = new DataSet();

            string DirectoryPath = Server.MapPath("~/Upload//");

            String strFilepPath = DirectoryPath + "1.xls";

            string strConn = "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + strFilepPath + ";" + ";Extended Properties=\"Excel 12.0;HDR=YES;IMEX=1\"";
            
            //string strConn = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=E:\\equipweb\\1\\CODE\\WebApp\\WebApp\\Upload\\1.xls;Extended Properties=\"Excel 12.0 XML;HDR=YES;IMEX=1\"";
            //       string strConn = @"Provider=Microsoft.ACE.OLEDB.12.0;Data Source="
            //     + strFilepPath + ";Extended Properties=\"Excel 12.0 Xml;HDR=YES;IMEX=1\"";
            OleDbConnection conn = new OleDbConnection(strConn);
            //SqlConnection conn = new SqlConnection(strConn);
            try
            {
                conn.Open();
                DataTable sheetNames = conn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, new object[] { null, null, null, "TABLE" });
                OleDbCommand cmd = new OleDbCommand("SELECT * FROM [" + sheetNames.Rows[0][2] + "]", conn);     //为Sheet命名后，顺序可以能编号，要注意   
                OleDbDataAdapter da = new OleDbDataAdapter(cmd);
                da.Fill(ds);
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }

            for (int i = 3; i < ds.Tables[0].Rows.Count - 1; i++)
            {
                string name = ds.Tables[0].Rows[i][0].ToString();
                string standard_value = ds.Tables[0].Rows[i][1].ToString();
                TableModel tmp = new TableModel();
                tmp.name = name;
                tmp.standard_value = standard_value;
                tb_list.Add(tmp);
            }
            return Json(tb_list.ToArray(), JsonRequestBehavior.AllowGet);

        }

    }
}