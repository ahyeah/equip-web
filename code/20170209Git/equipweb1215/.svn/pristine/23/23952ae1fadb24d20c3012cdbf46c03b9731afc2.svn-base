using EquipModel.Entities;
using FlowEngine;
using FlowEngine.UserInterface;
using WebApp.Models;
using WebApp.Models.User;
using System;
using System.Collections.Generic;
using System.Data.Entity.Infrastructure;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;
using EquipModel.Context;
using System.Text;
using EquipBLL.AdminManagment;
using System.IO;

namespace WebApp.Controllers
{
    public class A8dot2Controller : CommonController
    {
        //
        // GET: /A8dot2/
        public ActionResult Index()
        {
            return View(getIndexListRecords("A8dot2", (Session["User"] as EquipModel.Entities.Person_Info).Person_Name));    
        }

        // GET: /A8dot2/DRBPM生成提报（模拟）
        public ActionResult DrbpmSubmit(string wfe_id)
        {
            return View(getSubmitModel(wfe_id));
        }
        // GET: /A8dot2/推送到ERP生成工单
        public ActionResult ToERPCreateJob(string wfe_id)
        {
            return View(getMissInfoModel(wfe_id));
        }

        // GET: /A8dot2/检维修单位完善工单，制定检修方案
        public ActionResult JxdwCreatePlan(string wfe_id)
        {
            return View(getMissInfoModel(wfe_id));
        }
        // GET: /A8dot2/机动处（专业团队）审核下达
        public ActionResult ZytdConfirm(string wfe_id)
        {
            return View(getMissInfoModel(wfe_id));
        }

        // GET: /A8dot2/风险评估是否可行
        public ActionResult ToRiskAssess(string wfe_id)
        {
            return View(getMissInfoModel(wfe_id));
        }

        // GET: /A8dot2/维修单位建立通知单，实施检修计划
        public ActionResult JxdwImplementPlan(string wfe_id)
        {
            return View(getMissInfoModel(wfe_id));
        }

        // GET: /A8dot2/片区进行检修过程质量检查控制
        public ActionResult PqQualityControl(string wfe_id)
        {
            return View(getMissInfoModel(wfe_id));
        }

        // GET: /A8dot2/检修计划实施完成，封闭通知单
        public ActionResult JobFinishClose(string wfe_id)
        {
            return View(getMissInfoModel(wfe_id));
        }

        // GET: /A8dot2/跳转到[A3.3]文件管理--仅用于测试
        public ActionResult JumpToA3dot3(string wfe_id)
        {
            return View(getMissInfoModel(wfe_id));
        }

        // GET: /A8dot2/跳转到[A11.3]风险管控模块--仅用于测试
        public ActionResult JumpToA11dot3(string wfe_id)
        {
            return View(getMissInfoModel(wfe_id));
        }

        public string DrbpmSubmit_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["DrbpmSubmit_done"] = item["DrbpmSubmit_done"].ToString();
                signal["Equip_Code"] = item["Equip_Code"].ToString();
                signal["Abstract"] = item["Abstract"].ToString();
                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A8dot2/Index");
        }
        public string ToERPCreateJob_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["ToERPCreateJob_done"] = item["ToERPCreateJob_done"].ToString();
                signal["Job_Order"] = item["Job_Order"].ToString();
                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A8dot2/Index");
        }

        public string JxdwCreatePlan_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["JxdwCreatePlan_done"] = item["JxdwCreatePlan_done"].ToString();
                signal["Job_Order"] = item["Job_Order"].ToString();
                signal["Plan_Desc"] = item["Plan_Desc"].ToString();
                signal["Plan_DescFilePath"] = item["Plan_DescFilePath"].ToString();
                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A8dot2/Index");
        }

        public string ZytdConfirm_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["ZytdConfirm_done"] = item["ZytdConfirm_done"].ToString();
                signal["FaultyIntensity"] = item["FaultyIntensity"].ToString(); 
                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A8dot2/Index");
        }
        
        public string ToRiskAssess_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["RiskAssess_result"] = item["RiskAssess_result"].ToString();                
                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A8dot2/Index");
        }

        public string JxdwImplementPlan_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["JxdwImplementPlan_done"] = item["JxdwImplementPlan_done"].ToString();                
                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A8dot2/Index");
        }

        public string PqQualityControl_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["PqQualityControl_done"] = item["PqQualityControl_done"].ToString();
                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A8dot2/Index");
        }

        public string JobFinishClose_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["JobFinishClose_done"] = item["JobFinishClose_done"].ToString();
                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A8dot2/Index");
        }

        public string JumpToA3dot3_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["JumpToA3dot3_done"] = item["JumpToA3dot3_done"].ToString();
                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A8dot2/Index");
        }

        public string JumpToA11dot3_submitsignal(string json1)
        {
            try
            {
                JObject item = (JObject)JsonConvert.DeserializeObject(json1);
                string flowname = item["Flow_Name"].ToString();
                //paras
                Dictionary<string, string> signal = new Dictionary<string, string>();
                signal["JumpToA11dot3_done"] = item["JumpToA11dot3_done"].ToString();
                //record
                Dictionary<string, string> record = new Dictionary<string, string>();
                record["username"] = (Session["User"] as EquipModel.Entities.Person_Info).Person_Name;
                record["time"] = DateTime.Now.ToString();
                //submit
                CWFEngine.SubmitSignal(Convert.ToInt32(flowname), signal, record);
            }
            catch (Exception e)
            {
                return "";
            }
            return ("/A8dot2/Index");
        }

        public ActionResult WorkFolw_Detail(string wfe_id)
        {
            return View(getWFDetail_Model(wfe_id));
        }
	}
}